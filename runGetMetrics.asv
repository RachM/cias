clear all;
clc;

dim = 2;
dirName = ['data/',num2str(dim),'D/'];
nKernel = 1000;

load([dirName,'settings']);

% FDC
fdc = zeros(length(nCircles),nWalks);
fdc_est = zeros(length(nCircles),nWalks);

% Dispersion
disp = zeros(length(nCircles),nWalks);

% Information Content and related metrics
infoContent = zeros(length(nCircles),nWalks);
infoPartial = zeros(length(nCircles),nWalks);
infoStability = zeros(length(nCircles),nWalks);

% Length scale analysis
maxR = zeros(length(nCircles),nWalks);
minR = zeros(length(nCircles),nWalks);
meanR = zeros(length(nCircles),nWalks);
medianR = zeros(length(nCircles),nWalks);
modeR = zeros(length(nCircles),nWalks);
varR = zeros(length(nCircles),nWalks);
entropyR = zeros(length(nCircles),nWalks);
bandwidth = zeros(length(nCircles),nWalks);
kernelF = zeros(length(nCircles),nWalks,nKernel);
kernelX = zeros(length(nCircles),nWalks,nKernel);
    
for i=1:length(nCircles)
    load([dirName,'/circle_',num2str(nCircles(i)),'.mat']);
    dimTrue = nCircles(i)*dim;
    nSamplesTrue = nSamples*dimTrue;
    
    % Open the optimal packings
    x_g = load(['optimal_packings/csq',num2str(nCircles(i)),'.txt']);
    x_g = x_g(:,2:dim+1);
    x_g = reshape(x_g,1,dimTrue) + 0.5;
    
%     [a ind] = min(f, [], 2);
            
    for j=1:nWalks
        % Find global optimum (both the ACTUAL and an ESTIMATE)
%         x_g_est = reshape(x(j, ind(j), :), 1, dimTrue);
% 
%         x_temp = reshape(x(j,:,:), nSamplesTrue, dimTrue);
%         f_temp = reshape(f(j,:), nSamplesTrue, 1);
        
        x_temp = rand(nSamplesTrue, dimTrue);
        f_temp = zeros(nSamplesTrue,1);
        for k=1:nSamplesTrue
            f_temp(k) = circ_in_square(nCircles(i), dim, flags, x_temp(k,:));
        end
        [a ind] = min(f_temp);
        x_g_est = x_temp(ind,:);

%         fdc(i,j) = fitnessDistanceCorrelation(x_temp, f_temp, x_g); % Fitness distance correlation
        fdc_est(i,j) = fitnessDistanceCorrelation(x_temp, f_temp, x_g_est); % Fitness distance correlation
% 
%         s_b = round(0.05 * nSamplesTrue); % Best 5%
%         disp(i,j) = dispersion(x_temp, f_temp, s_b); % Dispersion
        
%         [ic, icp, ics] = informationContent(f_temp); % Information content
%         infoContent(i,j) = ic;
%         infoPartial(i,j) = icp;
%         infoStability(i,j) = ics;

%         rStats = length_scale(x_temp, f_temp); % Length scale statistics
% 
%         maxR(i,j) = rStats.max;
%         minR(i,j) = rStats.min;
%         meanR(i,j) = rStats.mean;
%         medianR(i,j) = rStats.median;
%         modeR(i,j) = rStats.mode;
%         varR(i,j) = rStats.var;
%         entropyR(i,j) = rStats.entropy;
%         bandwidth(i,j) = rStats.kerenelB;
%         kernelF(i,j,:) = rStats.kernelF;
%         kernelX(i,j,:) = rStats.kernelX;

        save([dirName,'/metrics_2_to_100.mat'], 'fdc_est', ...'fdc', ...
            ...'disp', ...
            ...'infoContent', 'infoPartial', 'infoStability', ...
            ...'maxR', 'minR', 'meanR', 'medianR', 'varR', 'modeR', ...
            ...'entropyR', 'bandwidth', 'kernelF', 'kernelX'...
            '-append');
    end

    nCircles(i)
end